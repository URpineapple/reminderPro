{"version":3,"sources":["components/App.jsx","actions/index.js","constants.js","reducers/index.js","index.js"],"names":["App","props","state","text","dueDate","this","addReminder","id","deleteReminder","reminders","className","map","reminder","key","moment","Date","fromNow","onClick","placeholder","onChange","event","setState","target","value","type","clearReminders","renderReminders","Component","connect","action","console","log","Math","random","removeById","filter","read_cookie","bake_cookie","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"8QAMMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,QAAS,IAJE,E,0DAUfC,KAAKJ,MAAMK,YAAYD,KAAKH,MAAMC,KAAME,KAAKH,MAAME,W,qCAGxCG,GACXF,KAAKJ,MAAMO,eAAeD,K,wCAGX,IAAD,OACNE,EAAcJ,KAAKJ,MAAnBQ,UACR,OACI,wBAAIC,UAAU,uBAEND,EAAUE,KAAI,SAAAC,GACV,OACI,wBAAIC,IAAKD,EAASL,GAAIG,UAAU,mBAC5B,yBAAKA,UAAU,aACX,6BAAME,EAAST,MACf,6BAAK,4BAAKW,IAAO,IAAIC,KAAKH,EAASR,UAAUY,aAEjD,yBAAKN,UAAU,0BACXO,QAAS,kBAAM,EAAKT,eAAeI,EAASL,MADhD,iB,+BAUlB,IAAD,OACL,OACI,yBAAKG,UAAU,OACX,yBAAKA,UAAU,SAAf,gBAGA,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,cACX,2BAAOA,UAAU,eAAeQ,YAAY,GACxCC,SAAU,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAElB,KAAMiB,EAAME,OAAOC,WAC1D,2BAAOb,UAAU,eAAec,KAAK,iBAAiBL,SAAU,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAEjB,QAASgB,EAAME,OAAOC,aAIvH,yBAAKb,UAAU,YACX,4BAAQc,KAAK,SAASd,UAAU,kBAAkBO,QAAS,kBAAM,EAAKX,gBAAtE,gBACA,4BAAQkB,KAAK,SAASd,UAAU,iBAAiBO,QAAS,kBAAM,EAAKhB,MAAMwB,mBAA3E,mBAEHpB,KAAKqB,uB,GA1DJC,aAsEHC,mBANf,SAAyB1B,GACrB,MAAO,CACHO,UAAWP,KAIqB,CAAEI,YC1Ef,SAACH,EAAMC,GAC9B,IAAMyB,EAAS,CACXL,KCJoB,eDKpBrB,OACAC,WAGJ,OADA0B,QAAQC,IAAI,wBAAyBF,GAC9BA,GDmE4CrB,eChEzB,SAACD,GAC3B,IAAMsB,EAAQ,CACVL,KCbuB,kBDcvBjB,MAGJ,OADAuB,QAAQC,IAAI,oBAAqBF,GAC1BA,GD0D4DJ,eCvDzC,WAC1B,MAAM,CACFD,KCrBuB,qBF0EhBI,CAA0E5B,G,sBGzEnFY,EAAW,SAACiB,GAAY,IACpB1B,EAAkB0B,EAAlB1B,KAAMC,EAAYyB,EAAZzB,QACZ,MAAO,CACHG,GAAIyB,KAAKC,SACT9B,OACAC,YAIF8B,EAAa,WAAqB,IAApBhC,EAAmB,uDAAX,GAAIK,EAAO,uCAC7BE,EAAYP,EAAMiC,QAAO,SAAAvB,GAAQ,OAAIA,EAASL,KAAOA,KAE3D,OADAuB,QAAQC,IAAI,wBAAyBtB,GAC9BA,GAyBIA,EAtBG,WAAyB,IAAxBP,EAAuB,uDAAf,GAAI2B,EAAW,uCAClCpB,EAAY,KAEhB,OADAP,EAAQkC,sBAAY,aACZP,EAAOL,MACX,IDtBoB,eCyBhB,OAFAf,EAAS,sBAAOP,GAAP,CAAcU,EAASiB,KAChCQ,sBAAY,YAAa5B,GAClBA,EACX,IDzBuB,kBC4BnB,OAFAA,EAAYyB,EAAWhC,EAAO2B,EAAOtB,IACrC8B,sBAAY,YAAa5B,GAClBA,EACX,ID5BuB,kBC+BnB,OAFAA,EAAY,GACZ4B,sBAAY,YAAa5B,GAClBA,EACX,QACI,OAAOP,IC5BboC,EAAQC,YAAYC,GAE1BC,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,GAAO,kBAAC,EAAD,OAAoBK,SAASC,eAAe,W","file":"static/js/main.23eb299c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addReminder, deleteReminder, clearReminders } from '../actions'\r\nimport '../index.css'\r\nimport moment from 'moment'\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            dueDate: ''\r\n        }\r\n    }\r\n\r\n    addReminder() {\r\n        //console.log('this',this)\r\n        this.props.addReminder(this.state.text, this.state.dueDate)\r\n    }\r\n\r\n    deleteReminder(id) {\r\n        this.props.deleteReminder(id)\r\n    }\r\n\r\n    renderReminders() {\r\n        const { reminders } = this.props\r\n        return (\r\n            <ul className=\"list-group col-sm-4\">\r\n                {\r\n                    reminders.map(reminder => {\r\n                        return (\r\n                            <li key={reminder.id} className=\"list-group-item\">\r\n                                <div className=\"list-item\">\r\n                                    <div>{reminder.text}</div>\r\n                                    <div><em>{moment(new Date(reminder.dueDate)).fromNow()}</em></div>\r\n                                </div>\r\n                                <div className=\"list-item delete-button\"\r\n                                    onClick={() => this.deleteReminder(reminder.id)}>&#x2715;</div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"title\">\r\n                    Reminder Pro\r\n                </div>\r\n                <div className=\"form-inline reminder-form\">\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" placeholder=\"\"\r\n                            onChange={event => this.setState({ text: event.target.value })} />\r\n                        <input className=\"form-control\" type=\"datetime-local\" onChange={event => this.setState({ dueDate: event.target.value })} />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"d-inline\">\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={() => this.addReminder()}>Add Reminder</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.props.clearReminders()}>Clear Reminder</button>\r\n                </div>\r\n                {this.renderReminders()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        reminders: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addReminder, deleteReminder, clearReminders })(App);\r\n","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../constants'\r\n\r\nexport const addReminder = (text, dueDate) => {\r\n    const action = {\r\n        type: ADD_REMINDER,\r\n        text,\r\n        dueDate\r\n    }\r\n    console.log('action in addReminder', action);\r\n    return action\r\n}\r\n\r\nexport const deleteReminder = (id) => {\r\n    const action ={\r\n        type: DELETE_REMINDER,\r\n        id\r\n    }\r\n    console.log('delete in actions', action)\r\n    return action\r\n}\r\n\r\nexport const clearReminders = () => {\r\n    return{\r\n        type: CLEAR_REMINDERS\r\n    }\r\n}","export const ADD_REMINDER = 'ADD_REMINDER'\r\nexport const DELETE_REMINDER = 'DELETE_REMINDER'\r\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS'","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../constants';\r\nimport { read_cookie, bake_cookie } from 'sfcookies';\r\n\r\nconst reminder = (action) => {\r\n    let { text, dueDate } = action;\r\n    return {\r\n        id: Math.random(),\r\n        text,\r\n        dueDate\r\n    }\r\n}\r\n\r\nconst removeById = (state = [], id) => {\r\n    const reminders = state.filter(reminder => reminder.id !== id)\r\n    console.log('new reduced reminders', reminders)\r\n    return reminders\r\n}\r\n\r\nconst reminders = (state = [], action) => {\r\n    let reminders = null;\r\n    state = read_cookie('reminders')\r\n    switch (action.type) {\r\n        case ADD_REMINDER:\r\n            reminders = [...state, reminder(action)]\r\n            bake_cookie('reminders', reminders)\r\n            return reminders\r\n        case DELETE_REMINDER:\r\n            reminders = removeById(state, action.id)\r\n            bake_cookie('reminders', reminders)\r\n            return reminders\r\n        case CLEAR_REMINDERS:\r\n            reminders = []\r\n            bake_cookie('reminders', reminders)\r\n            return reminders\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reminders;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}><App /></Provider>, document.getElementById('root')\r\n)"],"sourceRoot":""}